name: Continuous Integration
on: 
  pull_request:
  push:  
    paths-ignore:
      - '**/README.md'
      
jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:    
    - name: Branch output
      run: echo ${{ github.ref }}
    - uses: actions/checkout@v2
    - name: build container
      run: docker build --target test --tag todo-app:test .
    - name: run testing
      run: docker run todo-app:test
  
  Push-to-Docker:
    name: Push to DockerHub
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with: 
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Build and push Docker images
      uses: docker/build-push-action@v3
      with:
        context: .
        tags: iabo77/todoapp:${{ github.sha }}, iabo77/todoapp:latest
        push: true
        target: production

  Deploy-to-Azure:
    name: Deploy to Azure
    runs-on: ubuntu-latest
    #needs: Push-to-Docker
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    #- name: logon to Azure
      #run: az login --service-principal -u ${{ secrets.ARM_CLIENTID}} -p ${{ secrets.ARM_CLIENT_SECRET}} --tenant ${{ secrets.ARM_CLIENT_TENANT_ID}}
    - name: Initialize Terraform
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENTID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_CLIENT_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }} 
      run: terraform init -input=false
    - name: Terraform Deploy   
      env:         
        TF_VAR_DOCKER_REGISTRY_SERVER_USERNAME: ${{ secrets.DOCKER_USER}}
        TF_VAR_DOCKER_REGISTRY_SERVER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        TF_VAR_CLIENT_ID: ${{ secrets.CLIENT_ID }}
        TF_VAR_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        TF_VAR_SECRET_KEY: ${{ secrets.SECRET_KEY }}
        TF_VAR_FLASK_APP: ${{ secrets.FLASK_APP}}
        TF_VAR_FLASK_ENV: ${{ secrets.FLASK_ENV }}
        TF_VAR_DOCKER_IMAGE: ${{ secrets.DOCKER_IMAGE }}
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENTID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_CLIENT_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }} 
      run: terraform apply -input=false -auto-approve
    - name: Push to Azure Webhook
      run: curl -dH -X POST ${{ secrets.AZURE_WEBHOOK_URL }}

   